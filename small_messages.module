<?php

  /**
   * @file
   * Contains small_messages.module.
   */

use Drupal\Core\Access\AccessResult;
use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Session\AccountInterface;
use Drupal\node\NodeInterface;


/**
   * Implements hook_help().
   */
  function small_messages_help($route_name, RouteMatchInterface $route_match) {
    switch ($route_name) {
      // Main module help for the small_messages module.
      case 'help.page.small_messages':
        $output = '';
        $output .= '<h3>' . t('About') . '</h3>';
        $output .= '<p>' . t('Ein kleines Nachrichten-System') . '</p>';
        return $output;

      default:
    }
  }


  /**
   * Implements hook_theme().
   */
  function small_messages_theme() {
    return [
      'small_messages' => [
        'render element' => 'children',
      ],
    ];
  }


  /**
   * Implements hook_mail().
   */
  function small_messages_mail($key, &$message, $params) {

    switch ($key) {


      case 'EMAIL_PLAIN':

        $message['from'] = $params['from'];
        $message['subject'] = $params['title'];
        $message['body'][] = $params['message'];
        break;


      case 'EMAIL_SMTP' :

        $message['from'] = $params['from'];
        $message['subject'] = $params['title'];
        $message['headers'] = [
          'MIME-Version' => '1.0',
          'Content-Type' => "multipart/alternative",
          'Content-Transfer-Encoding' => '8Bit',
          'X-Mailer' => 'Drupal',
        ];
        $message['body'][] = "\r\n--\r\n";
        $message['body'][] = 'Content-Type: text/plain; charset=utf-8;';
        $message['body'][] = $params['message'];
        $message['body'][] = "\r\n--\r\n";
        $message['body'][] = "Content-Type: text/html; charset=utf-8;";
        $message['body'][] = $params['htmltext'];
        $message['body'][] = "\r\n-- --\r\n";
        break;
    }

  }


/**
 *
 * Implements hook_node_access().
 *
 * @param NodeInterface $node
 * @param $op
 * @param AccountInterface $account
 * @return \Drupal\Core\Access\AccessResultForbidden|\Drupal\Core\Access\AccessResultNeutral
 */
function small_messages_node_access(NodeInterface $node, $op, AccountInterface $account)
{
    $restricted_bundles = ['member'];
    $role_id = 'small_messages';

    $bundle_id = $node->bundle();
    $roles = $account->getRoles();

    // Default checks
    if (!is_object($node)) {
        return AccessResult::neutral();
    } else {

        // block http://example.com/node/123
        $parameter_node = \Drupal::routeMatch()->getRawParameter('node');

        if ($op == 'view' && $parameter_node == $node->id()) {

            // Allow for admin roles
            if (in_array($bundle_id, $restricted_bundles) && in_array($role_id, $roles)) {
                return AccessResult::neutral();

            } else {
                // Restrict access to full node for others
                return AccessResult::forbidden();
            }
        }
    }

    // Default
    return AccessResult::neutral();

}